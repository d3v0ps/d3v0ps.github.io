{"version":3,"sources":["webpack:///src/app/core/get-sorted-links.ts","webpack:///src/app/shared/links-list/links-list.component.ts","webpack:///src/app/shared/shared.module.ts"],"names":["links","blog","filter","link","route","startsWith","sort","a","b","order","LinksListComponent","scully","links$","available$","pipe","selector","template","SharedModule","imports","declarations","exports"],"mappings":";;;;;;;;;;;;;;;;;;;AACA;AAAe;;;AAAA,+CAACA,KAAD,EAAoBC,IAApB;AAAA,aAA6BD,KAAK,CAC9CE,MADyC,CAClC,UAAAC,IAAI;AAAA,eAAIA,IAAI,CAACC,KAAL,CAAWC,UAAX,YAA0BJ,IAA1B,EAAJ;AAAA,OAD8B,EAEzCK,IAFyC,CAEpC,UAAEC,CAAF,EAAKC,CAAL,EAAY;AAChB,YAAKD,CAAC,CAACE,KAAF,GAAUD,CAAC,CAACC,KAAjB,EAAyB;AACvB,iBAAO,CAAC,CAAR;AACD;;AACD,YAAKF,CAAC,CAACE,KAAF,GAAUD,CAAC,CAACC,KAAjB,EAAyB;AACvB,iBAAO,CAAP;AACD;;AACD,eAAO,CAAP;AACD,OAVyC,CAA7B;AAAA;;;;;;;;;;;;;;;;;ACAf;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;AAUM;;AAA0G;;AAAgB;;;;;;AAAnF;;AAAmE;;AAAA;;;;QAKnGC,kB;;;AAMX,kCAAoBC,MAApB,EAAiD;AAAA;;AAA7B,aAAAA,MAAA,GAAAA,MAAA;AAJX,aAAAV,IAAA,GAAO,EAAP;AAET,aAAAW,MAAA,GAA0B,IAA1B;AAEoD;;;;mCAEzC;AAAA;;AACT,eAAKA,MAAL,GAAc,KAAKD,MAAL,CAAYE,UAAZ,CAAuBC,IAAvB,CACZ,2DAAI,UAACd,KAAD;AAAA,mBAAuB,8EAAeA,KAAf,EAAsB,KAAI,CAACC,IAA3B,CAAvB;AAAA,WAAJ,CADY,CAAd;AAGD;;;;;;;uBAZUS,kB,EAAkB,qI;AAAA,K;;;YAAlBA,kB;AAAkB,qC;AAAA;AAAA;AAAA,O;AAAA,c;AAAA,a;AAAA,6L;AAAA;AAAA;AAN3B;;AACE;;;;AACF;;;;AADK;;AAAA;;;;;;;;;;sEAKIA,kB,EAAkB;cAT9B,uDAS8B;eATpB;AACTK,kBAAQ,EAAE,gBADD;AAETC,kBAAQ;AAFC,S;AASoB,Q;;;;;;gBAE5B;;;;;;;;;;;;;;;;;;;;AClBH;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QASaC,Y;;;;;YAAAA;;;;yBAAAA,Y;AAAY,O;AAAA,gBAJd,CAAC,4DAAD,CAIc;;;;0HAAZA,Y,EAAY;AAAA,uBAHR,mFAGQ;AAHU,kBADvB,4DACuB,CAGV;AAJD,kBAEZ,mFAFY;AAIC,O;AAFK,K;;;;;sEAEjBA,Y,EAAY;cALxB,sDAKwB;eALf;AACRC,iBAAO,EAAE,CAAC,4DAAD,CADD;AAERC,sBAAY,EAAE,CAAC,mFAAD,CAFN;AAGRC,iBAAO,EAAE,CAAC,mFAAD;AAHD,S;AAKe,Q","file":"common-es5.js","sourcesContent":["\r\nexport default (links: Array<any>, blog) => links\r\n  .filter(link => link.route.startsWith(`/${blog}`))\r\n  .sort(( a, b ) => {\r\n    if ( a.order < b.order ) {\r\n      return -1;\r\n    }\r\n    if ( a.order > b.order ) {\r\n      return 1;\r\n    }\r\n    return 0;\r\n  });\r\n","\r\nimport { Component, OnInit, Input } from '@angular/core';\r\nimport { ScullyRoutesService } from '@scullyio/ng-lib';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport getSortedLinks from 'src/app/core/get-sorted-links';\r\n\r\n@Component({\r\n  selector: 'app-links-list',\r\n  template: `\r\n    <div class=\"list-group card\">\r\n      <a *ngFor=\"let link of links$ | async\" [href]=\"link.route\" class=\"list-group-item list-group-item-action\">{{ link.title }}</a>\r\n    </div>\r\n  `\r\n})\r\n\r\nexport class LinksListComponent implements OnInit {\r\n\r\n  @Input() blog = '';\r\n\r\n  links$: Observable<any> = null;\r\n\r\n  constructor(private scully: ScullyRoutesService) { }\r\n\r\n  ngOnInit() {\r\n    this.links$ = this.scully.available$.pipe(\r\n      map((links: Array<any>) => getSortedLinks(links, this.blog))\r\n    );\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { LinksListComponent } from './links-list/links-list.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule],\r\n  declarations: [LinksListComponent],\r\n  exports: [LinksListComponent]\r\n})\r\nexport class SharedModule {\r\n\r\n}\r\n"]}